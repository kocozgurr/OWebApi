// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OstimTeknoparkApp.Data;

#nullable disable

namespace OstimTeknoparkApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OstimTeknoparkApp.Modals.Haber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Başlık")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Resim")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Slider")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("haberler", (string)null);
                });

            modelBuilder.Entity("OstimTeknoparkApp.Modals.RezervasyonTalep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cay")
                        .HasColumnType("int");

                    b.Property<string>("EkTalep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kahve")
                        .HasColumnType("int");

                    b.Property<string>("Saat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarih")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToplantıSalonId")
                        .HasColumnType("int");

                    b.Property<int>("tgbFirmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToplantıSalonId");

                    b.HasIndex("tgbFirmaId");

                    b.ToTable("rezervasyonlar", (string)null);
                });

            modelBuilder.Entity("OstimTeknoparkApp.Modals.TgbFirma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hakkında")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("MyProperty")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Sifre")
                        .HasColumnType("int");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.Property<string>("WebSitesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiliAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiliSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YetkiliTC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("firmalar", (string)null);
                });

            modelBuilder.Entity("OstimTeknoparkApp.Modals.ToplantıSalon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kisi")
                        .HasColumnType("int");

                    b.Property<string>("Konum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TopsalFoto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("salonlar", (string)null);
                });

            modelBuilder.Entity("OstimTeknoparkApp.Modals.RezervasyonTalep", b =>
                {
                    b.HasOne("OstimTeknoparkApp.Modals.ToplantıSalon", "ToplantıSalon")
                        .WithMany("RezervasyonTaleps")
                        .HasForeignKey("ToplantıSalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OstimTeknoparkApp.Modals.TgbFirma", "tgbFirma")
                        .WithMany("RezervasyonTaleps")
                        .HasForeignKey("tgbFirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToplantıSalon");

                    b.Navigation("tgbFirma");
                });

            modelBuilder.Entity("OstimTeknoparkApp.Modals.TgbFirma", b =>
                {
                    b.Navigation("RezervasyonTaleps");
                });

            modelBuilder.Entity("OstimTeknoparkApp.Modals.ToplantıSalon", b =>
                {
                    b.Navigation("RezervasyonTaleps");
                });
#pragma warning restore 612, 618
        }
    }
}
